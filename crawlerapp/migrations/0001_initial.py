# Generated by Django 2.0.3 on 2019-04-28 22:52

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.CharField(default='', max_length=15, primary_key=True, serialize=False)),
                ('language', models.CharField(default='', max_length=15)),
                ('videos', models.TextField(default='')),
                ('search_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('owner', models.TextField(default='')),
                ('youtube_params', django.contrib.postgres.fields.jsonb.JSONField(default=list, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobs_list', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('name', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('created_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('user_id', models.TextField(default='')),
                ('filters', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('document', models.FileField(upload_to='downloaded_videos')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=50)),
                ('num_vids', models.IntegerField(blank=True, default=None, null=True)),
                ('num_pages', models.IntegerField(blank=True, default=None, null=True)),
                ('videos', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('name', models.TextField(default='')),
                ('work_status', models.TextField(default='')),
                ('query', models.TextField(default='')),
                ('region', models.TextField(default='')),
                ('created_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('user_id', models.TextField(default='')),
                ('cc_enabled', models.CharField(default='', max_length=50)),
                ('video_def', models.CharField(default='', max_length=15)),
                ('video_duration', models.CharField(default='', max_length=15)),
                ('safe_search', models.CharField(default='', max_length=15)),
                ('ordering', models.CharField(default='', max_length=15)),
                ('executed', models.BooleanField(default=False)),
                ('download_finished', models.BooleanField(default=False)),
                ('channel_id', models.TextField(default='')),
                ('filters', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
            options={
                'permissions': [('can_crawl', 'Can Crawl and Download'), ('can_view', 'Can Review the passed videos and answer relevant questions')],
            },
        ),
        migrations.CreateModel(
            name='PlayList',
            fields=[
                ('id', models.CharField(default='', max_length=15, primary_key=True, serialize=False)),
                ('search_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('videos', models.TextField(default='')),
                ('owner', models.TextField(default='')),
                ('youtube_params', django.contrib.postgres.fields.jsonb.JSONField(default=list, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.CharField(default='', max_length=50, primary_key=True, serialize=False)),
                ('channel_id', models.CharField(default='', max_length=50, null=True)),
                ('cc_enabled', models.CharField(default='', max_length=50, null=True)),
                ('language', models.CharField(default='', max_length=15, null=True)),
                ('region', models.TextField(default='')),
                ('video_def', models.CharField(default='', max_length=15, null=True)),
                ('video_duration', models.CharField(max_length=50, null=True)),
                ('search_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('download_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('download_path', models.TextField(default='', null=True)),
                ('download_success', models.NullBooleanField()),
                ('filters', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('questions', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('audio_extracted', models.NullBooleanField()),
                ('query', models.TextField(default='', null=True)),
                ('job_ids', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('dislike_count', models.CharField(default='', max_length=50, null=True)),
                ('like_count', models.CharField(default='', max_length=50, null=True)),
                ('view_count', models.CharField(default='', max_length=50, null=True)),
                ('comment_count', models.CharField(default='', max_length=50, null=True)),
                ('published_date', models.CharField(default='', max_length=50, null=True)),
            ],
        ),
    ]
